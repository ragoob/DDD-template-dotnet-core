// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using On.Infra;

namespace On.Infra.Migrations
{
    [DbContext(typeof(OnContext))]
    [Migration("20211221103047_Add_customer_status")]
    partial class Add_customer_status
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresExtension("uuid-ossp")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("On.Domain.Entites.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<int>("CustomerStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("customer");
                });

            modelBuilder.Entity("On.Domain.Entites.Customer", b =>
                {
                    b.OwnsOne("On.Domain.Entites.CustomerAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid");

                            b1.Property<string>("City")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("text")
                                .HasDefaultValue("")
                                .HasColumnName("city");

                            b1.Property<string>("Country")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("text")
                                .HasDefaultValue("")
                                .HasColumnName("country");

                            b1.Property<string>("State")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("text")
                                .HasDefaultValue("")
                                .HasColumnName("state");

                            b1.Property<string>("Street")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("text")
                                .HasDefaultValue("")
                                .HasColumnName("street");

                            b1.Property<string>("Zipcode")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("text")
                                .HasDefaultValue("")
                                .HasColumnName("zip_code");

                            b1.HasKey("CustomerId");

                            b1.ToTable("customer");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.OwnsMany("On.Domain.Entites.CustomerPhoto", "customerPhotos", b1 =>
                        {
                            b1.Property<Guid>("CustomerId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uuid")
                                .HasColumnName("id")
                                .HasDefaultValueSql("uuid_generate_v4()");

                            b1.Property<string>("Alt")
                                .HasColumnType("text")
                                .HasColumnName("alt");

                            b1.Property<string>("PathUrl")
                                .HasColumnType("text")
                                .HasColumnName("path_url");

                            b1.HasKey("CustomerId", "Id");

                            b1.ToTable("CustomerPhoto");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });

                    b.Navigation("Address");

                    b.Navigation("customerPhotos");
                });
#pragma warning restore 612, 618
        }
    }
}
